#!/bin/bash
#hashbang line, tells the script it should use bash to interpret its content


# Script by DTE 03/29/2020
# Last update: 03/29/2020

# I like to move it move it!
# ⊂(▀¯▀⊂)⊂(▀¯▀⊂) ⊂(▀¯▀⊂)⊂(▀¯▀⊂) ⊂(▀¯▀⊂)⊂(▀¯▀⊂) ⊂(▀¯▀⊂)⊂(▀¯▀⊂) ⊂(▀¯▀⊂)⊂(▀¯▀⊂) ⊂(▀¯▀⊂)⊂(▀¯▀⊂) ⊂(▀¯▀⊂)⊂(▀¯▀⊂) ⊂(▀¯▀⊂)⊂(▀¯▀⊂) 

# this script is designed to read the latest geometry of a converged geometry optimization from a Gaussian output file as well as the displacement
# parameters of the lowest calculated frequency (this requires freq as keyword in previous job). By reformating and adding them up, it generates new 
# input coordinates equivalent to doing a manual displacement along the lowest vibration in GaussView. A new .com file is generated and a new opt and freq 
# calculation is submitted to MSI

# INSTRUCTIONS
# in order to use this script, create a folder called bin in your home directory via cd; mkdir bin; and save this script in the bin folder
# edit your .bash_profile file (on MSI this seems to be identical with the .bashrc) by adding the following line
# export PATH=~/bin=$PATH
# this will allow you to source the script from anywhere you currently are in your folder tree
# to call this script type: source shakeit  <name_of_.out_file> or just shakeit <name_of_.out_file>


#============================================= Begin of script =================================================================================

module load python2 #load the module python version 2.x on MSI
python ~/bin/shake.py $1  	#this will source the shake.py script located in ~/bin and 
			 	#read a .out file in current directory which is assigned as output
				#and extract the final coordinates including the frequency displacement vectors
				#and then add them all together
echo
echo
echo "LET'S DO THE HARLEM SHAKE!!!"
echo 
echo
echo
read -p "Press enter to continue"
echo


input="$1" #declares the string with name of input file in this case a .out file
name="${input%%.out}_shake" #cuts off the .chk part of the input file adds the suffix _shake and saves it to variable name
name_com="${input%%.out}.com" #this should be the string of the name of the original .com file
name_out="${input%%.out}.out" #this should be the string of the name of original .out file

function write_com (){
#this will generate a new .com file
cat > "$name"".com" << EOL
%LindaWorkers=in-cn1040
%nprocshared=32
%mem=80000MB
%chk=$name.chk
EOL

grep -A1 "#" $name_com >> "$name"".com"  #this will take the first 2 lines of route section in original .com file and append them to the new .com
#potential a bug, if people start to use too long route sections this may lead to a problem here
echo >> "$name"".com" #add a free line as spacer

echo "Please provide a title in form of a string for this calculation. Make sure to not have any free standing integer numbers in there."
read title
echo "$title" >> "$name"".com" #should append the title to the freshly generated .com file
echo >> "$name"".com" #another free line as spacer

echo "Provide the charge and spin state of your system in the form of two numbers.(default will result in 0 1 = neutral, singlett)"
        read chargeandspin

        if [ -z "$chargeandspin" ];
        then
        chargeandspin="0 1"
        fi
echo "$chargeandspin" >> "$name"".com" #add the information about charge and spin state

cat py.xyz >> "$name"".com" #this will print the content of the py.xyz file generated by the shakeit.py script and append it to the .com file

rm py.xyz #remove the temporary file to keep your directory tidy, also this info is now anyways in the new .com
 
echo >> "$name"".com"
echo >> "$name"".com"
echo >> "$name"".com"
#append some extra empty lines at the very end of the new .com file
}

function submit (){
	source subg $name.com #this should automatically generate a new pbs from the new .com and submit it to the queue
}

function main (){
	write_com  #generate new .com file
	submit
	
}

main
#call main function



#once all this is done I actually don't need the original .com file and .out file anymore (which I moved over with my housekeep script, so delete that
rm $name_com
rm $name_out

 
#============================================= End of script ==================================================================================
